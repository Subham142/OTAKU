[{"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\ProductScreen.js":"1","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Header.js":"2","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\LoginScreen.js":"3","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\index.js":"4","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Chat.js":"5","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\reducers\\orderReducers.js":"6","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\OrderScreen.js":"7","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\RegisterScreen.js":"8","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\CartScreen.js":"9","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Footer.js":"10","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\HomeScreen.js":"11"},{"size":7338,"mtime":1616001385820,"results":"12","hashOfConfig":"13"},{"size":3138,"mtime":1619713328019,"results":"14","hashOfConfig":"13"},{"size":2316,"mtime":1619709535555,"results":"15","hashOfConfig":"13"},{"size":590,"mtime":1613920233624,"results":"16","hashOfConfig":"13"},{"size":6478,"mtime":1619695309521,"results":"17","hashOfConfig":"13"},{"size":3516,"mtime":1615804582409,"results":"18","hashOfConfig":"13"},{"size":7369,"mtime":1615804639739,"results":"19","hashOfConfig":"13"},{"size":3328,"mtime":1619709356489,"results":"20","hashOfConfig":"13"},{"size":3606,"mtime":1619709773470,"results":"21","hashOfConfig":"13"},{"size":8015,"mtime":1619710386695,"results":"22","hashOfConfig":"13"},{"size":1705,"mtime":1619711724143,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hzppom",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Header.js",["48"],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\LoginScreen.js",["49"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\nimport Goku from '../pics/goku.png'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { loading, error, userInfo } = userLogin\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(login(email, password))\r\n  }\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      \r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n    \r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <img src = {Goku} className=\"goku-img\"/>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default LoginScreen","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\index.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Chat.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\RegisterScreen.js",["50"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\nimport Titan from '../pics/titan.png'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userRegister = useSelector((state) => state.userRegister)\r\n  const { loading, error, userInfo } = userRegister\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect)\r\n    }\r\n  }, [history, userInfo, redirect])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n      dispatch(register(name, email, password))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password Address</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          ></Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an Account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n    <img src = {Titan} className=\"titan-img\"/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\CartScreen.js",["51"],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\components\\Footer.js",[],"D:\\web Dev\\MajorProject\\Shop_Buddy\\frontend\\src\\screens\\HomeScreen.js",[],{"ruleId":"52","severity":1,"message":"53","line":8,"column":8,"nodeType":"54","messageId":"55","endLine":8,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":73,"column":7,"nodeType":"58","endLine":73,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":102,"column":5,"nodeType":"58","endLine":102,"endColumn":47},{"ruleId":"56","severity":1,"message":"57","line":112,"column":5,"nodeType":"58","endLine":112,"endColumn":45},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]